plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ec'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'mysql:mysql-connector-java:8.0.33'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Keep only the latest version of JJWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

// Task to build React application
task buildReact(type: Exec) {
    workingDir 'ui/user'  // Path to the React frontend folder
    commandLine 'npm', 'install'  // Install npm dependencies
    commandLine 'npm', 'run', 'build'  // Build the React application
}

// Task to copy React build output to Spring Boot static folder
task copyReactBuild(type: Copy) {
    dependsOn buildReact
    from 'ui/user/build'  // React build output directory
    into 'src/main/resources/static'  // Spring Boot static resources directory
}

// Ensure processResources waits for copyReactBuild
tasks.named('processResources') {
    dependsOn copyReactBuild
}

// Configure the test task to use JUnit Platform
tasks.named('test') {
    useJUnitPlatform()
}

// Ensure tasks run before Spring Boot application build
bootJar.dependsOn copyReactBuild